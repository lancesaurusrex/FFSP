@model WebApplication1.Models.FFLeague

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>FFLeague</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.NumberOfTeams, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               @* @Html.EditorFor(model => model.NumberOfTeams, new { htmlAttributes = new { @class = "form-control" } }) *@
                
                @Html.DropDownListFor(model => model.NumberOfTeams, new SelectList(Model.NumberOfTeamsList, Model))
                @Html.ValidationMessageFor(model => model.NumberOfTeams, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NumberOfDivision, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.PlayoffWeekStart, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.NumberOfDivision, new SelectList(Model.NumberOfDivisionsList, Model))
                @Html.ValidationMessageFor(model => model.NumberOfDivision, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PlayoffWeekStart, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.PlayoffWeekStart, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.PlayoffWeekStart, new SelectList(Model.NumberOfPlayoffWeekStartList, Model))
                @Html.ValidationMessageFor(model => model.PlayoffWeekStart, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.QBStart, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.QBStart, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.QBStart, new SelectList(Model.NumberOfQBStList, Model))
                @Html.ValidationMessageFor(model => model.QBStart, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RBStart, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.RBStart, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.RBStart, new SelectList(Model.NumberOfRBStList, Model))
                @Html.ValidationMessageFor(model => model.RBStart, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WRTESame, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.WRTESame)
                    @Html.ValidationMessageFor(model => model.WRTESame, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WRStart, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.WRStart, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.WRStart, new SelectList(Model.NumberOfWRStList, Model))
                @Html.ValidationMessageFor(model => model.WRStart, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TEStart, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.TEStart, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.TEStart, new SelectList(Model.NumberOfTEStList, Model))
                @Html.ValidationMessageFor(model => model.TEStart, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DEFStart, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.DEFStart, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.DEFStart, new SelectList(Model.NumberOfDEFStList, Model))
                @Html.ValidationMessageFor(model => model.DEFStart, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
